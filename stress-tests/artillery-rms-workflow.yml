config:
  target: 'http://localhost:5000'
  phases:
    # Tournament management load test
    - duration: 180
      arrivalRate: 20
      name: "Tournament Management Load"
  
  defaults:
    headers:
      Content-Type: 'application/json'
      Accept: 'application/json'

scenarios:
  # Tournament and team management workflow
  - name: "Tournament Operations"
    weight: 25
    flow:
      - get:
          url: "/tournaments"
          expect:
            - statusCode: 200
      - get:
          url: "/tournaments/1"
          expect:
            - statusCode: [200, 404]
      - get:
          url: "/teams"
          expect:
            - statusCode: 200
      - get:
          url: "/teams/1"
          expect:
            - statusCode: [200, 404]
      - think: 2

  # Match management workflow  
  - name: "Match Operations"
    weight: 25
    flow:
      - get:
          url: "/matches"
          expect:
            - statusCode: 200
      - get:
          url: "/matches/1"
          expect:
            - statusCode: [200, 404]
      - get:
          url: "/match-scores"
          expect:
            - statusCode: [200, 401, 403]
      - get:
          url: "/match-scheduler"
          expect:
            - statusCode: [200, 401, 403]
      - think: 3

  # Stage management workflow
  - name: "Stage Operations"
    weight: 20
    flow:
      - get:
          url: "/stages"
          expect:
            - statusCode: 200
      - get:
          url: "/stages/1"
          expect:
            - statusCode: [200, 404]
      - think: 2

  # User and referee management
  - name: "User Management"
    weight: 15
    flow:
      - get:
          url: "/users"
          expect:
            - statusCode: [200, 401, 403]
      - get:
          url: "/field-referees"
          expect:
            - statusCode: [200, 401, 403]
      - think: 2

  # Configuration endpoints
  - name: "Configuration Access"
    weight: 15
    flow:
      - get:
          url: "/score-config"
          expect:
            - statusCode: [200, 401, 403]
      - get:
          url: "/"
          expect:
            - statusCode: 200
      - think: 1
